library(datasets)
data(iris)
?iris
mean(iris[iris$Species == "virginica",]$Sepal.Length)
library(datasets)
data(mtcars)
?mtcars
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
debug(ls)
ะดั
ls
packages <- c("data.table", "jpeg")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
setInternet2(TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, f)
dt <- data.table(read.csv(f))
agricultureLogical <- dt$ACR == 3 & dt$AGS == 6
which(agricultureLogical)[1:3]
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f, mode = "wb")
img <- readJPEG(f, native = TRUE)
quantile(img, probs = c(0.3, 0.8))
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", #
    "Long.Name", "gdp"))
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y, #
    rankingGDP, gdp)][13]
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
breaks <- quantile(dt$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks = breaks)
dt[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
library(data.table)#
library(dplyr)#
#
pwd('/Users/egorov/datasciencecoursera/Getting and Cleaning Data/Course Project')#
#
featureNames <- read.table("UCI HAR Dataset/features.txt")#
activityLabels <- read.table("UCI HAR Dataset/activity_labels.txt", header = FALSE)#
#
subjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)#
activityTrain <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)#
featuresTrain <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)#
#
subjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)#
activityTest <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)#
featuresTest <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)#
#
subject <- rbind(subjectTrain, subjectTest)#
activity <- rbind(activityTrain, activityTest)#
features <- rbind(featuresTrain, featuresTest)#
#
colnames(features) <- t(featureNames[2])#
#
colnames(activity) <- "Activity"#
colnames(subject) <- "Subject"#
completeData <- cbind(features,activity,subject)#
#
columnsWithMeanSTD <- grep(".*Mean.*|.*Std.*", names(completeData), ignore.case=TRUE)#
#
requiredColumns <- c(columnsWithMeanSTD, 562, 563)#
dim(completeData)#
#
extractedData <- completeData[,requiredColumns]#
dim(extractedData)#
#
extractedData$Activity <- as.character(extractedData$Activity)#
for (i in 1:6){#
extractedData$Activity[extractedData$Activity == i] <- as.character(activityLabels[i,2])#
}#
#
extractedData$Activity <- as.factor(extractedData$Activity)#
#
names(extractedData)#
#
names(extractedData)<-gsub("Acc", "Accelerometer", names(extractedData))#
names(extractedData)<-gsub("Gyro", "Gyroscope", names(extractedData))#
names(extractedData)<-gsub("BodyBody", "Body", names(extractedData))#
names(extractedData)<-gsub("Mag", "Magnitude", names(extractedData))#
names(extractedData)<-gsub("^t", "Time", names(extractedData))#
names(extractedData)<-gsub("^f", "Frequency", names(extractedData))#
names(extractedData)<-gsub("tBody", "TimeBody", names(extractedData))#
names(extractedData)<-gsub("-mean()", "Mean", names(extractedData), ignore.case = TRUE)#
names(extractedData)<-gsub("-std()", "STD", names(extractedData), ignore.case = TRUE)#
names(extractedData)<-gsub("-freq()", "Frequency", names(extractedData), ignore.case = TRUE)#
names(extractedData)<-gsub("angle", "Angle", names(extractedData))#
names(extractedData)<-gsub("gravity", "Gravity", names(extractedData))#
#
names(extractedData)#
#
extractedData$Subject <- as.factor(extractedData$Subject)#
extractedData <- data.table(extractedData)#
#
tidyData <- aggregate(. ~Subject + Activity, extractedData, mean)#
tidyData <- tidyData[order(tidyData$Subject,tidyData$Activity),]#
write.table(tidyData, file = "Tidy.txt", row.names = FALSE)
library(plyr)
library(data.table)#
library(plyr)#
#
setwd('/Users/egorov/datasciencecoursera/Getting and Cleaning Data/Course Project')#
#
featureNames <- read.table("UCI HAR Dataset/features.txt")#
activityLabels <- read.table("UCI HAR Dataset/activity_labels.txt", header = FALSE)#
#
subjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)#
activityTrain <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)#
featuresTrain <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)#
#
subjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)#
activityTest <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)#
featuresTest <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)#
#
subject <- rbind(subjectTrain, subjectTest)#
activity <- rbind(activityTrain, activityTest)#
features <- rbind(featuresTrain, featuresTest)#
#
colnames(features) <- t(featureNames[2])#
#
colnames(activity) <- "Activity"#
colnames(subject) <- "Subject"#
completeData <- cbind(features,activity,subject)#
#
columnsWithMeanSTD <- grep(".*Mean.*|.*Std.*", names(completeData), ignore.case=TRUE)#
#
requiredColumns <- c(columnsWithMeanSTD, 562, 563)#
dim(completeData)#
#
extractedData <- completeData[,requiredColumns]#
dim(extractedData)#
#
extractedData$Activity <- as.character(extractedData$Activity)#
for (i in 1:6){#
extractedData$Activity[extractedData$Activity == i] <- as.character(activityLabels[i,2])#
}#
#
extractedData$Activity <- as.factor(extractedData$Activity)#
#
names(extractedData)#
#
names(extractedData)<-gsub("Acc", "Accelerometer", names(extractedData))#
names(extractedData)<-gsub("Gyro", "Gyroscope", names(extractedData))#
names(extractedData)<-gsub("BodyBody", "Body", names(extractedData))#
names(extractedData)<-gsub("Mag", "Magnitude", names(extractedData))#
names(extractedData)<-gsub("^t", "Time", names(extractedData))#
names(extractedData)<-gsub("^f", "Frequency", names(extractedData))#
names(extractedData)<-gsub("tBody", "TimeBody", names(extractedData))#
names(extractedData)<-gsub("-mean()", "Mean", names(extractedData), ignore.case = TRUE)#
names(extractedData)<-gsub("-std()", "STD", names(extractedData), ignore.case = TRUE)#
names(extractedData)<-gsub("-freq()", "Frequency", names(extractedData), ignore.case = TRUE)#
names(extractedData)<-gsub("angle", "Angle", names(extractedData))#
names(extractedData)<-gsub("gravity", "Gravity", names(extractedData))#
#
names(extractedData)#
#
extractedData$Subject <- as.factor(extractedData$Subject)#
extractedData <- data.table(extractedData)#
#
tidyData <- aggregate(. ~Subject + Activity, extractedData, mean)#
tidyData <- tidyData[order(tidyData$Subject,tidyData$Activity),]#
write.table(tidyData, file = "Tidy.txt", row.names = FALSE)
source("/Users/egorov/datasciencecoursera/githubLoad.txt")
